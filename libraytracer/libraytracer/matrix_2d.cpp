#include <matrix_2d.h>

////////////////////////////////////////////////////////////////////////////////////////////////////
template <typename T>
Matrix2D<T>::Matrix2D(size_t width, size_t height)
: width(width), height(height)
{
    auto row = std::vector<T*>(height, new T{});
    matrix.resize(width, row);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
template <typename T>
size_t Matrix2D<T>::getWidth()
{
    return width;
}


////////////////////////////////////////////////////////////////////////////////////////////////////
template <typename T>
T Matrix2D<T>::get(size_t x, size_t y)
{
    return *(matrix[y][x]);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
template <typename T>
void Matrix2D<T>::set(size_t x, size_t y, T value)
{
    *(matrix[0][0]) = value;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
template <typename T>
size_t Matrix2D<T>::getHeight()
{
    return height;
}

template <typename T>
bool Matrix2D<T>::isBlank()
{
    for (const auto& row: matrix)
        for (const auto& col: row)
            if (*col != T{}) return false;
    return true;
}


////////////////////////////////////////////////////////////////////////////////////////////////////
/// Explicit template instantiations
////////////////////////////////////////////////////////////////////////////////////////////////////
template class Matrix2D<Colour>;